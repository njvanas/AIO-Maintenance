name: Build and Release EXE

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: 📦 Install Dependencies
        run: pip install pyinstaller

      - name: 🏷️ Bump Version Tag
        id: version
        shell: bash
        run: |
          git fetch --tags
          latest=$(git tag --sort=-v:refname | head -n 1)
          echo "Latest tag: $latest"
          if [[ $latest =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            new_tag="v$major.$minor.$((patch + 1))"
          else
            new_tag="v1.0.0"
          fi
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "$new_tag"
          git push origin "$new_tag"

      - name: 🔧 Build EXE with PyInstaller
        run: |
          pyinstaller AIOMaintenance.py --onefile --windowed --clean --noupx ^
          --hidden-import=requests --hidden-import=urllib3 --hidden-import=chardet --hidden-import=idna
        shell: cmd

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: "Release ${{ steps.version.outputs.new_tag }}"
          files: dist/AIOMaintenance.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
